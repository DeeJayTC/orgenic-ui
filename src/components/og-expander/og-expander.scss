/**
 * @prop --og-expander-BackgroundColor: Overall background color of the card
 * @prop --og-expander-BorderColor: Border color of the expanders border
 * @prop --og-expander-BorderRadius: Border radius of the expanders border
 * @prop --og-expander-BorderWidth: Border width of the expanders border
 * @prop --og-expander-Margin: Margin around the card
 * @prop --og-expander__header-BorderColor: Boder color of the expanders header border
 * @prop --og-expander__header-BorderStyle: Boder style of the expanders header border
 * @prop --og-expander__header-BorderWidth: Boder width of the expanders header border
 * @prop --og-expander__header-FontSize: Font size of the expanders header
 * @prop --og-expander__header-FontWeight: Font weight of the expanders header
 * @prop --og-expander__header-TextTransform: Text transformation of the expanders header
 * @prop --og-expander__header-Margin: Margin of the expanders header
 * @prop --og-expander__header-Padding: Padding of the expanders header
 * @prop --og-expander__content-Padding: Padding of the expanders content
 */

:host {
    // Expander
    --og-expander-BackgroundColor:          var(--OG-COLOR-SHADE--0--80,        #{$og-color-shade--0--80});
    --og-expander-BorderColor:              var(--OG-COLOR-SHADE--0,            #{$og-color-shade--0});
    --og-expander-BorderRadius:             var(--OG-BORDER-RADIUS,             #{$og-border-radius});
    --og-expander-BorderWidth:              var(--OG-BORDER-WIDTH,              #{$og-border-width});
    --og-expander-Margin:                   8px;

    // Header
    --og-expander__header-BorderColor:      transparent;
    --og-expander__header-BorderStyle:      solid;
    --og-expander__header-BorderWidth:      0;

    --og-expander__header-FontSize:         0.875rem;
    --og-expander__header-FontWeight:       bold;
    --og-expander__header-TextTransform:    uppercase;

    --og-expander__header-Margin:           0 32px;
    --og-expander__header-Padding:          0;

    // Content
    --og-expander__content-Padding:         8px 32px;

    --og-expander__button__arrow-Width: 20px;
    --og-expander__button__arrow-Padding: 0px 4px 4px 4px;

    box-sizing: border-box;
    *, *::before, *::after { box-sizing: inherit; }
}

.og-expander {
    display: flex;
    flex-direction: column;
    overflow: hidden;

    background-color: var(--og-expander-BackgroundColor);
    border-color: var(--og-expander-BorderColor);
    border-style: solid;
    border-width: var(--og-expander-BorderWidth);
    border-radius: var(--og-expander-BorderRadius);

    box-shadow: 0 0 8px rgba(0, 0, 0, .3);

    margin: var(--og-expander-Margin);
}

.og-expander__header {
    display: flex;
    flex-direction: row;
    min-height: 56px;
    align-items: center;
    border-color: var(--og-expander__header-BorderColor);
    border-style: var(--og-expander__header-BorderStyle);
    border-width: var(--og-expander__header-BorderWidth);

    font-size: var(--og-expander__header-FontSize);
    font-weight: var(--og-expander__header-FontWeight);
    margin: var(--og-expander__header-Margin);
    padding: var(--og-expander__header-Padding);
    text-transform: var(--og-expander__header-TextTransform);

    cursor: pointer;
}

.og-expander__title {
    @include ellipsis();
    flex-grow: 1;
}

.og-expander__content {
    transition: 1s;
    flex-grow: 1;
    padding: var(--og-expander__content-Padding);
}

.og-expander__content:not([data-expanded]) {
    display: none;
}

.og-expander__button {
    flex: none;
    width: var(--og-expander__button__arrow-Width);
    padding: var(--og-expander__button__arrow-Padding);
}

.og-expander__button__arrow {
    transition: transform 0.1s;
    overflow: visible;
}

.og-expander__button__arrow--collapsed {
    transform: rotate(180deg);
}


.og-expander__button__arrow__line {
    stroke-linecap: round;
    stroke-linejoin: round;
}
